{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/adyllsxn/Workspace/Developer/comj-frontend/src/components/ui/customAlert.tsx"],"sourcesContent":["// components/ui/customAlert.tsx\n'use client';\n\nimport { useState, useEffect, useCallback } from 'react';\n\n// Interface para o alerta\ninterface AlertProps {\n  message: string;\n  type?: 'success' | 'error' | 'warning' | 'info';\n  duration?: number;\n  onClose: () => void;\n}\n\n// Componente do Alert\nconst CustomAlert = ({ message, type = 'info', duration = 3000, onClose }: AlertProps) => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  const handleClose = useCallback(() => {\n    setIsVisible(false);\n    setTimeout(() => onClose(), 300);\n  }, [onClose]);\n\n  useEffect(() => {\n    setIsVisible(true);\n    \n    if (duration > 0) {\n      const timer = setTimeout(() => {\n        handleClose();\n      }, duration);\n      \n      return () => clearTimeout(timer);\n    }\n  }, [duration, handleClose]);\n\n  return (\n    <div \n      className={`fixed top-4 right-4 min-w-[300px] p-4 rounded-lg shadow-xl transform transition-all duration-300 ease-in-out z-50 flex items-center ${\n        isVisible ? 'translate-x-0 opacity-100' : 'translate-x-full opacity-0'\n      } ${\n        type === 'success' ? 'bg-gradient-to-r from-green-500 to-green-600 border-l-4 border-green-700 text-white' :\n        type === 'error' ? 'bg-gradient-to-r from-red-500 to-red-600 border-l-4 border-red-700 text-white' :\n        type === 'warning' ? 'bg-gradient-to-r from-orange-500 to-orange-600 border-l-4 border-orange-700 text-white' :\n        'bg-gradient-to-r from-blue-500 to-blue-600 border-l-4 border-blue-700 text-white'\n      }`}\n    >\n      <div className=\"flex justify-between items-center w-full\">\n        <span className=\"flex-1 mr-3 text-sm font-medium leading-relaxed\">\n          {message}\n        </span>\n        <button \n          onClick={handleClose}\n          className=\"w-6 h-6 flex items-center justify-center rounded-full hover:bg-white/20 transition-colors duration-200 text-white text-lg font-bold\"\n        >\n          &times;\n        </button>\n      </div>\n    </div>\n  );\n};\n\n// Hook useAlert\nexport const useAlert = () => {\n  const [alerts, setAlerts] = useState<{id: number; message: string; type: 'success' | 'error' | 'warning' | 'info'}[]>([]);\n\n  const showAlert = (message: string, type: 'success' | 'error' | 'warning' | 'info' = 'info') => {\n    const id = Date.now();\n    setAlerts(prev => [...prev, { id, message, type }]);\n  };\n\n  const removeAlert = (id: number) => {\n    setAlerts(prev => prev.filter(alert => alert.id !== id));\n  };\n\n  const AlertContainer = () => (\n    <>\n      {alerts.map(alert => (\n        <CustomAlert\n          key={alert.id}\n          message={alert.message}\n          type={alert.type}\n          onClose={() => removeAlert(alert.id)}\n        />\n      ))}\n    </>\n  );\n\n  return { showAlert, AlertContainer };\n};\n\nexport default CustomAlert;"],"names":[],"mappings":"AAAA,gCAAgC;;;;;;;;AAGhC;AAFA;;;AAYA,sBAAsB;AACtB,MAAM,cAAc,CAAC,EAAE,OAAO,EAAE,OAAO,MAAM,EAAE,WAAW,IAAI,EAAE,OAAO,EAAc;IACnF,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,iNAAQ,EAAC;IAE3C,MAAM,cAAc,IAAA,oNAAW,EAAC;QAC9B,aAAa;QACb,WAAW,IAAM,WAAW;IAC9B,GAAG;QAAC;KAAQ;IAEZ,IAAA,kNAAS,EAAC;QACR,aAAa;QAEb,IAAI,WAAW,GAAG;YAChB,MAAM,QAAQ,WAAW;gBACvB;YACF,GAAG;YAEH,OAAO,IAAM,aAAa;QAC5B;IACF,GAAG;QAAC;QAAU;KAAY;IAE1B,qBACE,8OAAC;QACC,WAAW,CAAC,oIAAoI,EAC9I,YAAY,8BAA8B,6BAC3C,CAAC,EACA,SAAS,YAAY,wFACrB,SAAS,UAAU,kFACnB,SAAS,YAAY,2FACrB,oFACA;kBAEF,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAK,WAAU;8BACb;;;;;;8BAEH,8OAAC;oBACC,SAAS;oBACT,WAAU;8BACX;;;;;;;;;;;;;;;;;AAMT;AAGO,MAAM,WAAW;IACtB,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,iNAAQ,EAAkF,EAAE;IAExH,MAAM,YAAY,CAAC,SAAiB,OAAiD,MAAM;QACzF,MAAM,KAAK,KAAK,GAAG;QACnB,UAAU,CAAA,OAAQ;mBAAI;gBAAM;oBAAE;oBAAI;oBAAS;gBAAK;aAAE;IACpD;IAEA,MAAM,cAAc,CAAC;QACnB,UAAU,CAAA,OAAQ,KAAK,MAAM,CAAC,CAAA,QAAS,MAAM,EAAE,KAAK;IACtD;IAEA,MAAM,iBAAiB,kBACrB;sBACG,OAAO,GAAG,CAAC,CAAA,sBACV,8OAAC;oBAEC,SAAS,MAAM,OAAO;oBACtB,MAAM,MAAM,IAAI;oBAChB,SAAS,IAAM,YAAY,MAAM,EAAE;mBAH9B,MAAM,EAAE;;;;;;IASrB,OAAO;QAAE;QAAW;IAAe;AACrC;uCAEe","debugId":null}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":["file:///home/adyllsxn/Workspace/Developer/comj-frontend/src/app/%28containers%29/contato/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from \"react\";\nimport { FaWhatsapp, FaPhone, FaEnvelope, FaMapMarkerAlt, FaClock, FaPaperPlane, FaExclamationTriangle, FaUser } from \"react-icons/fa\";\nimport api from \"@/lib/api\";\nimport { useAlert } from \"@/components/ui/customAlert\";\nimport { WHATSAPP_CONFIG } from \"@/constants/whatsapp\";\nimport { INFORMATION_CONFIG } from \"@/constants/i\";\n\n// Mapeamento dos assuntos para valores em inglês\nconst subjectMapping = {\n  'informacao': 'Informações Gerais',\n  'visita': 'Agendar Visita', \n  'suporte': 'Suporte Técnico',\n  'outro': 'Outro'\n};\n\n// Interface para erros\ninterface ApiError {\n  code?: string;\n  message?: string;\n  name?: string;\n  response?: {\n    status?: number;\n    data?: {\n      errors?: string[] | Record<string, string[]>;\n      message?: string;\n      success?: boolean;\n    };\n  };\n}\n\ntype ErrorType = 'NETWORK_ERROR' | 'VALIDATION_ERROR' | 'SERVER_ERROR' | 'TIMEOUT_ERROR' | 'UNKNOWN_ERROR';\n\n// Função auxiliar para detectar tipo de erro - SILENCIOSA\nconst getErrorType = (error: ApiError): ErrorType => {\n  if (!error) return 'UNKNOWN_ERROR';\n  \n  // Erro de timeout\n  if (error.message === 'TIMEOUT_ERROR') {\n    return 'TIMEOUT_ERROR';\n  }\n  \n  // Erro de rede\n  if (error.code === 'NETWORK_ERROR' || error.code === 'ECONNABORTED' || error.message?.includes('Network Error')) {\n    return 'NETWORK_ERROR';\n  }\n  \n  // Erro de validação (status 400)\n  if (error.response?.status === 400) {\n    return 'VALIDATION_ERROR';\n  }\n  \n  // Erro do servidor (status 500+)\n  if (error.response?.status && error.response.status >= 500) {\n    return 'SERVER_ERROR';\n  }\n  \n  return 'UNKNOWN_ERROR';\n};\n\n// Função para retry automático - SILENCIOSA\nconst retryApiCall = async (fn: () => Promise<unknown>, retries = 2): Promise<unknown> => {\n  try {\n    return await fn();\n  } catch (error) {\n    if (retries > 0 && getErrorType(error as ApiError) === 'NETWORK_ERROR') {\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      return retryApiCall(fn, retries - 1);\n    }\n    throw error;\n  }\n};\n\n// Função para processar erros de validação\nconst processValidationErrors = (errors: string[] | Record<string, string[]> | undefined): Record<string, string> => {\n  const validationErrors: Record<string, string> = {};\n\n  if (!errors) return validationErrors;\n\n  // Se for array de strings\n  if (Array.isArray(errors)) {\n    errors.forEach((err: string) => {\n      if (err.includes('Full name') || err.includes('Nome')) validationErrors.nome = err;\n      else if (err.includes('Email') || err.includes('E-mail')) validationErrors.email = err;\n      else if (err.includes('Phone') || err.includes('Telefone')) validationErrors.telefone = err;\n      else if (err.includes('Subject') || err.includes('Assunto')) validationErrors.assunto = err;\n      else if (err.includes('Message') || err.includes('Mensagem')) validationErrors.mensagem = err;\n    });\n  } \n  // Se for objeto com campos\n  else if (typeof errors === 'object') {\n    Object.entries(errors).forEach(([field, errorMessages]) => {\n      if (Array.isArray(errorMessages) && errorMessages.length > 0) {\n        const errorMessage = errorMessages[0];\n        if (field.includes('FullName') || field.includes('fullName') || field.includes('nome')) validationErrors.nome = errorMessage;\n        else if (field.includes('Email') || field.includes('email')) validationErrors.email = errorMessage;\n        else if (field.includes('Phone') || field.includes('phone') || field.includes('telefone')) validationErrors.telefone = errorMessage;\n        else if (field.includes('Subject') || field.includes('subject') || field.includes('assunto')) validationErrors.assunto = errorMessage;\n        else if (field.includes('Message') || field.includes('message') || field.includes('mensagem')) validationErrors.mensagem = errorMessage;\n      }\n    });\n  }\n\n  return validationErrors;\n};\n\nexport default function Contacto() {\n  const { showAlert, AlertContainer } = useAlert();\n  const [formData, setFormData] = useState({\n    nome: \"\",\n    sobrenome: \"\",\n    email: \"\",\n    telefone: \"\", \n    assunto: \"\",\n    mensagem: \"\"\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [errors, setErrors] = useState<Record<string, string>>({});\n\n  // Função para formatar nome (PRIMEIRA maiúscula, RESTO minúscula)\n  const formatNamePart = (name: string): string => {\n    if (!name) return \"\";\n    \n    // Remove espaços extras e trim\n    const cleaned = name.trim();\n    \n    // PRIMEIRA LETRA MAIÚSCULA, RESTO SEMPRE MINÚSCULA\n    if (cleaned.length > 0) {\n      return cleaned.charAt(0).toUpperCase() + cleaned.slice(1).toLowerCase();\n    }\n    \n    return cleaned;\n  };\n\n  // Função para juntar nome e sobrenome em FullName\n  const getFullName = (): string => {\n    const nomeFormatado = formatNamePart(formData.nome);\n    const sobrenomeFormatado = formatNamePart(formData.sobrenome);\n    \n    if (nomeFormatado && sobrenomeFormatado) {\n      return `${nomeFormatado} ${sobrenomeFormatado}`;\n    } else if (nomeFormatado) {\n      return nomeFormatado;\n    } else if (sobrenomeFormatado) {\n      return sobrenomeFormatado;\n    }\n    \n    return \"\";\n  };\n\n  // Função para validar e formatar email (sempre minúsculo)\n  const handleEmailChange = (value: string) => {\n    const cleaned = value.toLowerCase().trim();\n    setFormData(prev => ({ ...prev, email: cleaned }));\n  };\n\n  // Função para validar telefone (9 dígitos, começando com 9)\n  const validateTelefone = (telefone: string): boolean => {\n    const numbers = telefone.replace(/\\D/g, '');\n    const telefoneRegex = /^9\\d{8}$/;\n    return telefoneRegex.test(numbers);\n  };\n\n  // Função para formatar telefone enquanto digita\n  const formatTelefone = (value: string): string => {\n    const numbers = value.replace(/\\D/g, '');\n    \n    // Garantir que começa com 9\n    let formatted = numbers;\n    if (formatted.length > 0 && formatted[0] !== '9') {\n      formatted = '9' + formatted.slice(1);\n    }\n    \n    // Limitar a 9 dígitos\n    formatted = formatted.slice(0, 9);\n    \n    // Formatar visualmente: 9XX XXX XXX\n    if (formatted.length <= 3) {\n      return formatted;\n    } else if (formatted.length <= 6) {\n      return `${formatted.slice(0, 3)} ${formatted.slice(3)}`;\n    } else {\n      return `${formatted.slice(0, 3)} ${formatted.slice(3, 6)} ${formatted.slice(6)}`;\n    }\n  };\n\n  // Handler para input do telefone\n  const handleTelefoneInput = (value: string) => {\n    const formatted = formatTelefone(value);\n    setFormData(prev => ({ ...prev, telefone: formatted }));\n    \n    // Limpar erro do telefone quando usuário começar a digitar\n    if (errors.telefone) {\n      setErrors(prev => ({ ...prev, telefone: '' }));\n    }\n  };\n\n  // Função para validar nome (mínimo 2 caracteres)\n  const validateNamePart = (name: string): boolean => {\n    return name.length >= 2;\n  };\n\n  // Função para validar email\n  const validateEmail = (email: string): boolean => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setErrors({});\n\n    // Validações do frontend - NOME\n    if (!validateNamePart(formData.nome)) {\n      setErrors(prev => ({ \n        ...prev, \n        nome: 'Nome deve ter pelo menos 2 caracteres' \n      }));\n      showAlert(\"Por favor, corrija o nome.\", \"warning\");\n      setIsLoading(false);\n      return;\n    }\n\n    // Validações do frontend - SOBRENOME (opcional mas recomendado)\n    if (formData.sobrenome && !validateNamePart(formData.sobrenome)) {\n      setErrors(prev => ({ \n        ...prev, \n        sobrenome: 'Sobrenome deve ter pelo menos 2 caracteres' \n      }));\n      showAlert(\"Por favor, corrija o sobrenome.\", \"warning\");\n      setIsLoading(false);\n      return;\n    }\n\n    if (!validateEmail(formData.email)) {\n      setErrors(prev => ({ \n        ...prev, \n        email: 'Email inválido' \n      }));\n      showAlert(\"Por favor, insira um email válido.\", \"warning\");\n      setIsLoading(false);\n      return;\n    }\n\n    // Validação do telefone antes de enviar\n    const telefoneNumbers = formData.telefone.replace(/\\D/g, '');\n    if (!validateTelefone(formData.telefone)) {\n      setErrors(prev => ({ \n        ...prev, \n        telefone: 'Telefone deve ter 9 dígitos e começar com 9 (ex: 923 456 789)' \n      }));\n      showAlert(\"Por favor, corrija o número de telefone.\", \"warning\");\n      setIsLoading(false);\n      return;\n    }\n\n    try {\n      // Juntar nome e sobrenome em FullName para a API\n      const fullName = getFullName();\n      \n      // Mapear dados para o formato da API\n      const apiData = {\n        fullName: fullName, // \"Domingos Nascimento\"\n        phone: telefoneNumbers,\n        email: formData.email.toLowerCase(), // Email sempre minúsculo\n        subject: subjectMapping[formData.assunto as keyof typeof subjectMapping] || formData.assunto,\n        message: formData.mensagem\n      };\n\n      // Função de requisição com timeout\n      const makeRequest = async (): Promise<unknown> => {\n        const controller = new AbortController();\n        const timeoutId = setTimeout(() => controller.abort(), 10000);\n\n        try {\n          const response = await api.post('/v1/Support/SendEmail', apiData, {\n            signal: controller.signal\n          });\n          clearTimeout(timeoutId);\n          return response;\n        } catch (error: unknown) {\n          clearTimeout(timeoutId);\n          if ((error as ApiError).name === 'AbortError') {\n            throw new Error('TIMEOUT_ERROR');\n          }\n          throw error;\n        }\n      };\n\n      // Executar requisição com retry automático\n      const response = await retryApiCall(makeRequest) as { data?: { success?: boolean } };\n\n      if (response.data?.success) {\n        showAlert(\"Mensagem enviada com sucesso! Entraremos em contacto em breve.\", \"success\");\n        setFormData({ \n          nome: \"\", \n          sobrenome: \"\", \n          email: \"\", \n          telefone: \"\", \n          assunto: \"\", \n          mensagem: \"\" \n        });\n      } else {\n        showAlert(\"Erro ao enviar mensagem. Tente novamente.\", \"error\");\n      }\n\n    } catch (error: unknown) {\n      // ⭐⭐ REMOVIDO COMPLETAMENTE O console.error ⭐⭐\n      // Nenhum log no console - tratamento totalmente silencioso\n\n      const errorType = getErrorType(error as ApiError);\n\n      switch (errorType) {\n        case 'NETWORK_ERROR':\n          showAlert(\"Erro de conexão. Verifique sua internet e tente novamente.\", \"error\");\n          break;\n\n        case 'TIMEOUT_ERROR':\n          showAlert(\"Tempo de espera esgotado. O servidor está demorando para responder.\", \"error\");\n          break;\n\n        case 'VALIDATION_ERROR':\n          const apiError = error as ApiError;\n          if (apiError.response?.data?.errors) {\n            const validationErrors = processValidationErrors(apiError.response.data.errors);\n            setErrors(validationErrors);\n            showAlert(\"Por favor, corrija os erros no formulário.\", \"warning\");\n          } else {\n            showAlert(\"Dados inválidos. Verifique as informações do formulário.\", \"warning\");\n          }\n          break;\n\n        case 'SERVER_ERROR':\n          showAlert(\"Servidor indisponível no momento. Tente novamente em alguns instantes.\", \"error\");\n          break;\n\n        default:\n          if ((error as ApiError).response?.data?.message) {\n            showAlert((error as ApiError).response!.data!.message!, \"error\");\n          } else {\n            showAlert(\"Erro inesperado ao enviar mensagem. Tente novamente mais tarde.\", \"error\");\n          }\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleChange = (field: string, value: string) => {\n    if (field === 'telefone') {\n      handleTelefoneInput(value);\n    } else if (field === 'email') {\n      handleEmailChange(value);\n    } else {\n      setFormData(prev => ({ ...prev, [field]: value }));\n    }\n    \n    // Limpar erro do campo quando usuário começar a digitar\n    if (errors[field]) {\n      setErrors(prev => ({ ...prev, [field]: '' }));\n    }\n  };\n\n  // Handler específico para o blur dos nomes (aplica formatação final)\n  const handleNameBlur = (field: 'nome' | 'sobrenome', value: string) => {\n    const formatted = formatNamePart(value);\n    setFormData(prev => ({ ...prev, [field]: formatted }));\n  };\n\n  // Handler específico para o blur do email (aplica formatação final)\n  const handleEmailBlur = (value: string) => {\n    const formatted = value.toLowerCase().trim();\n    setFormData(prev => ({ ...prev, email: formatted }));\n  };\n\n  const contactInfo = [\n    {\n      icon: FaWhatsapp,\n      title: \"WhatsApp\",\n      info: WHATSAPP_CONFIG.display.formattedNumber,\n      link: WHATSAPP_CONFIG.urls.withMessage,\n      color: \"text-green-500\"\n    },\n    {\n      icon: FaPhone,\n      title: \"Telefone\", \n      info: INFORMATION_CONFIG.display.formattedNumber,\n      link: INFORMATION_CONFIG.display.linkformattedNumberCall,\n      color: \"text-blue-500\"\n    },\n    {\n      icon: FaEnvelope,\n      title: \"Email\",\n      info: INFORMATION_CONFIG.display.linkEmail, \n      link: INFORMATION_CONFIG.display.linkEmail,\n      color: \"text-orange-500\"\n    },\n    {\n      icon: FaMapMarkerAlt,\n      title: \"Localização\",\n      info: \"Zango-4, Benfica\",\n      link: \"/localizacao\",\n      color: \"text-red-500\"\n    },\n    {\n      icon: FaClock,\n      title: \"Horário de Atendimento\",\n      info: INFORMATION_CONFIG.display.linkInformation,\n      link: \"#\",\n      color: \"text-purple-500\"\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-orange-50 to-purple-50 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900 py-12 px-4 sm:px-6 lg:px-8\">\n      <AlertContainer />\n      \n      <div className=\"max-w-7xl mx-auto\">\n        \n        {/* Header Section */}\n        <div className=\"text-center mb-16\">\n          <h1 className=\"text-4xl lg:text-5xl font-bold text-gray-800 dark:text-white mb-4\">\n            Entre em <span className=\"text-orange-600\">Contacto</span>\n          </h1>\n          <p className=\"text-xl text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\n            Estamos aqui para ajudar. Entre em contacto connosco através dos nossos canais de atendimento.\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12\">\n          \n          {/* Contact Information */}\n          <div className=\"space-y-8\">\n            <div className=\"bg-white/95 dark:bg-gray-800/95 backdrop-blur-sm rounded-2xl shadow-xl border border-white/20 dark:border-gray-700/50 p-8\">\n              <h2 className=\"text-2xl font-bold text-gray-800 dark:text-white mb-6\">\n                Informações de Contacto\n              </h2>\n              \n              <div className=\"space-y-6\">\n                {contactInfo.map((item, index) => {\n                  const Icon = item.icon;\n                  return (\n                    <a\n                      key={index}\n                      href={item.link}\n                      target={item.link.startsWith('http') ? '_blank' : '_self'}\n                      rel={item.link.startsWith('http') ? 'noopener noreferrer' : ''}\n                      className=\"flex items-center space-x-4 p-4 rounded-xl bg-gray-50 dark:bg-gray-700/50 hover:bg-white dark:hover:bg-gray-700 border border-gray-200 dark:border-gray-600 transition-all duration-300 hover:shadow-lg hover:scale-105 group\"\n                    >\n                      <div className={`p-3 rounded-lg bg-white dark:bg-gray-800 shadow-lg group-hover:shadow-xl transition-all duration-300 ${item.color}`}>\n                        <Icon className=\"w-6 h-6\" />\n                      </div>\n                      <div className=\"flex-1\">\n                        <h3 className=\"font-semibold text-gray-800 dark:text-white\">{item.title}</h3>\n                        <p className=\"text-gray-600 dark:text-gray-300\">{item.info}</p>\n                      </div>\n                    </a>\n                  );\n                })}\n              </div>\n            </div>\n\n            {/* Emergency Contact */}\n            <div className=\"bg-gradient-to-r from-orange-500 to-red-600 rounded-2xl shadow-2xl p-8 text-white\">\n              <div className=\"text-center\">\n                <FaWhatsapp className=\"w-12 h-12 mx-auto mb-4 text-white\" />\n                <h3 className=\"text-2xl font-bold mb-2\">Contacto de Emergência</h3>\n                <p className=\"text-orange-100 mb-4\">Disponível 24/7 para situações urgentes</p>\n                <a\n                  href={WHATSAPP_CONFIG.urls.withMessage}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"inline-flex items-center space-x-2 bg-white text-orange-600 px-6 py-3 rounded-lg font-bold hover:bg-gray-100 transition-all duration-300 transform hover:scale-105 shadow-lg\"\n                >\n                  <FaWhatsapp className=\"w-5 h-5\" />\n                  <span>Falar no WhatsApp Agora</span>\n                </a>\n              </div>\n            </div>\n          </div>\n\n          {/* Contact Form */}\n          <div className=\"bg-white/95 dark:bg-gray-800/95 backdrop-blur-sm rounded-2xl shadow-xl border border-white/20 dark:border-gray-700/50 p-8\">\n            <h2 className=\"text-2xl font-bold text-gray-800 dark:text-white mb-6\">\n              Envie-nos uma Mensagem\n            </h2>\n            \n            <form onSubmit={handleSubmit} className=\"space-y-6\">\n              {/* Nome e Sobrenome em linha */}\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                {/* Nome */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                    Nome *\n                  </label>\n                  <div className=\"relative\">\n                    <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                      <FaUser className=\"h-4 w-4 text-gray-400\" />\n                    </div>\n                    <input\n                      type=\"text\"\n                      required\n                      value={formData.nome}\n                      onChange={(e) => handleChange('nome', e.target.value)}\n                      onBlur={(e) => handleNameBlur('nome', e.target.value)}\n                      className={`w-full pl-10 pr-4 py-3 border-2 rounded-xl bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-500 focus:outline-none transition-all duration-200 ${\n                        errors.nome ? 'border-red-500' : 'border-gray-200 dark:border-gray-600 focus:border-orange-500'\n                      }`}\n                      placeholder=\"Ex: Domingos\"\n                    />\n                  </div>\n                  {errors.nome ? (\n                    <p className=\"text-red-500 text-sm mt-1 flex items-center\">\n                      <FaExclamationTriangle className=\"w-3 h-3 mr-1\" />\n                      {errors.nome}\n                    </p>\n                  ) : (\n                    <p className=\"text-gray-500 text-sm mt-1\">\n                      Primeiro nome\n                    </p>\n                  )}\n                </div>\n\n                {/* Sobrenome */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                    Sobrenome\n                  </label>\n                  <div className=\"relative\">\n                    <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                      <FaUser className=\"h-4 w-4 text-gray-400\" />\n                    </div>\n                    <input\n                      type=\"text\"\n                      value={formData.sobrenome}\n                      onChange={(e) => handleChange('sobrenome', e.target.value)}\n                      onBlur={(e) => handleNameBlur('sobrenome', e.target.value)}\n                      className={`w-full pl-10 pr-4 py-3 border-2 rounded-xl bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-500 focus:outline-none transition-all duration-200 ${\n                        errors.sobrenome ? 'border-red-500' : 'border-gray-200 dark:border-gray-600 focus:border-orange-500'\n                      }`}\n                      placeholder=\"Ex: Nascimento\"\n                    />\n                  </div>\n                  {errors.sobrenome ? (\n                    <p className=\"text-red-500 text-sm mt-1 flex items-center\">\n                      <FaExclamationTriangle className=\"w-3 h-3 mr-1\" />\n                      {errors.sobrenome}\n                    </p>\n                  ) : (\n                    <p className=\"text-gray-500 text-sm mt-1\">\n                      Sobrenome (opcional)\n                    </p>\n                  )}\n                </div>\n              </div>\n\n              {/* Preview do FullName */}\n              {formData.nome && (\n                <div className=\"bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-3\">\n                  <p className=\"text-sm text-blue-800 dark:text-blue-300\">\n                    <strong>Nome completo que será enviado:</strong>{' '}\n                    <span className=\"font-semibold\">{getFullName()}</span>\n                  </p>\n                </div>\n              )}\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                    Email *\n                  </label>\n                  <input\n                    type=\"email\"\n                    required\n                    value={formData.email}\n                    onChange={(e) => handleChange('email', e.target.value)}\n                    onBlur={(e) => handleEmailBlur(e.target.value)}\n                    className={`w-full px-4 py-3 border-2 rounded-xl bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-500 focus:outline-none transition-all duration-200 lowercase ${\n                      errors.email ? 'border-red-500' : 'border-gray-200 dark:border-gray-600 focus:border-orange-500'\n                    }`}\n                    placeholder=\"seu@email.com\"\n                  />\n                  {errors.email && (\n                    <p className=\"text-red-500 text-sm mt-1 flex items-center\">\n                      <FaExclamationTriangle className=\"w-3 h-3 mr-1\" />\n                      {errors.email}\n                    </p>\n                  )}\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                    Telefone *\n                  </label>\n                  <input\n                    type=\"tel\"\n                    required\n                    value={formData.telefone}\n                    onChange={(e) => handleChange('telefone', e.target.value)}\n                    className={`w-full px-4 py-3 border-2 rounded-xl bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-500 focus:outline-none transition-all duration-200 ${\n                      errors.telefone ? 'border-red-500' : 'border-gray-200 dark:border-gray-600 focus:border-orange-500'\n                    }`}\n                    placeholder=\"9XX XXX XXX\"\n                    maxLength={11}\n                  />\n                  {errors.telefone ? (\n                    <p className=\"text-red-500 text-sm mt-1 flex items-center\">\n                      <FaExclamationTriangle className=\"w-3 h-3 mr-1\" />\n                      {errors.telefone}\n                    </p>\n                  ) : (\n                    <p className=\"text-gray-500 text-sm mt-1\">\n                      Formato: 9 dígitos começando com 9\n                    </p>\n                  )}\n                </div>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  Assunto *\n                </label>\n                <select\n                  required\n                  value={formData.assunto}\n                  onChange={(e) => handleChange('assunto', e.target.value)}\n                  className={`w-full px-4 py-3 border-2 rounded-xl bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:outline-none transition-all duration-200 ${\n                    errors.assunto ? 'border-red-500' : 'border-gray-200 dark:border-gray-600 focus:border-orange-500'\n                  }`}\n                >\n                  <option value=\"\">Selecione o assunto</option>\n                  <option value=\"informacao\">Informações Gerais</option>\n                  <option value=\"visita\">Agendar Visita</option>\n                  <option value=\"suporte\">Suporte Técnico</option>\n                  <option value=\"outro\">Outro</option>\n                </select>\n                {errors.assunto && (\n                  <p className=\"text-red-500 text-sm mt-1 flex items-center\">\n                    <FaExclamationTriangle className=\"w-3 h-3 mr-1\" />\n                    {errors.assunto}\n                  </p>\n                )}\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  Mensagem *\n                </label>\n                <textarea\n                  required\n                  rows={6}\n                  value={formData.mensagem}\n                  onChange={(e) => handleChange('mensagem', e.target.value)}\n                  className={`w-full px-4 py-3 border-2 rounded-xl bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-500 focus:outline-none transition-all duration-200 resize-none ${\n                    errors.mensagem ? 'border-red-500' : 'border-gray-200 dark:border-gray-600 focus:border-orange-500'\n                  }`}\n                  placeholder=\"Descreva a sua mensagem...\"\n                />\n                {errors.mensagem && (\n                  <p className=\"text-red-500 text-sm mt-1 flex items-center\">\n                    <FaExclamationTriangle className=\"w-3 h-3 mr-1\" />\n                    {errors.mensagem}\n                  </p>\n                )}\n              </div>\n\n              <button\n                type=\"submit\"\n                disabled={isLoading}\n                className=\"w-full bg-gradient-to-r from-orange-500 to-red-600 hover:from-orange-600 hover:to-red-700 text-white py-4 px-6 rounded-xl font-bold text-lg shadow-lg hover:shadow-xl transform hover:translate-y-[-2px] transition-all duration-300 disabled:opacity-70 disabled:cursor-not-allowed disabled:transform-none flex items-center justify-center space-x-2\"\n              >\n                {isLoading ? (\n                  <>\n                    <div className=\"w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin\" />\n                    <span>Enviando...</span>\n                  </>\n                ) : (\n                  <>\n                    <FaPaperPlane className=\"w-5 h-5\" />\n                    <span>Enviar Mensagem</span>\n                  </>\n                )}\n              </button>\n            </form>\n          </div>\n        </div>\n\n        {/* FAQ Section */}\n        <div className=\"mt-16 bg-white/95 dark:bg-gray-800/95 backdrop-blur-sm rounded-2xl shadow-xl border border-white/20 dark:border-gray-700/50 p-8\">\n          <h2 className=\"text-3xl font-bold text-center text-gray-800 dark:text-white mb-8\">\n            Perguntas Frequentes\n          </h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            {[\n              {\n                pergunta: \"Como me candidatar a um apartamento?\",\n                resposta: \"Pode candidatar-se através do nosso site, preenchendo o formulário de candidatura online ou contactando-nos diretamente.\"\n              },\n              {\n                pergunta: \"Quais os documentos necessários?\",\n                resposta: \"BI, comprovativo de rendimentos, declaração de IRS e outros documentos que possam ser solicitados conforme o caso.\"\n              },\n              {\n                pergunta: \"Qual o prazo de resposta?\",\n                resposta: \"O prazo médio de resposta é de 5 a 10 dias úteis após a submissão completa da candidatura.\"\n              },\n              {\n                pergunta: \"Posso agendar uma visita?\",\n                resposta: `Sim, pode agendar uma visita através do nosso ${WHATSAPP_CONFIG.display.buttonText} ou formulário de contacto.`\n              }\n            ].map((faq, index) => (\n              <div key={index} className=\"bg-gray-50 dark:bg-gray-700/50 rounded-xl p-6 hover:shadow-lg transition-all duration-300\">\n                <h3 className=\"font-bold text-gray-800 dark:text-white mb-2\">Q: {faq.pergunta}</h3>\n                <p className=\"text-gray-600 dark:text-gray-300\">R: {faq.resposta}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}